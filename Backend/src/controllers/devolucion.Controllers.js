// src/controllers/devolucionController.js
import devolucionService from '../services/devolucion.Services.js';
import { respondSuccess, respondError } from '../utils/resHandler.js';

const devolucionController = {
  registrarDevolucion: async (req, res) => {
    try {
      console.log('üì• Petici√≥n recibida para registrar devoluci√≥n');
      console.log('üßæ Body original recibido:', req.body);

      if (!req.validated) {
        console.warn('‚ö†Ô∏è req.validated no est√° definido');
        return respondError(req, res, 400, 'Error de validaci√≥n. Revisa el cuerpo de la solicitud.');
      }

      if (!req.user?.id) {
        console.warn('‚ö†Ô∏è Usuario no autenticado');
        return respondError(req, res, 401, 'No autenticado. Inicia sesi√≥n.');
      }

      // No incluir manager en el log para evitar problemas de circularidad
      const logData = { ...req.validated, usuario_id: req.user.id };
      console.log('üì¶ Datos validados a enviar al servicio de devoluci√≥n:', logData);

      const data = {
        ...req.validated,
        usuario_id: req.user.id,
        manager: req.manager
      };

      const resultado = await devolucionService.registrarDevolucion(data);

      console.log('‚úÖ Devoluci√≥n registrada correctamente:', resultado);
      return respondSuccess(req, res, 201, resultado);

    } catch (error) {
      console.error('‚ùå Error al registrar devoluci√≥n en el controlador:', error);
      return respondError(req, res, 500, 'Error al registrar la devoluci√≥n: ' + error.message);
    }
  }
};

export default devolucionController;
